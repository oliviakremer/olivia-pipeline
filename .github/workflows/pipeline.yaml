name: test-package-deploy-pipeline #MWC
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: "test"
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip  # installs pip and upgrades to the latest version
          pip install -r requirements.txt;
      - name: Install pytest and dependencies
        run: |
          pip install pytest
      # Run tests
      - name: Run tests with pytest
        run: |
          python -m pytest
  package:
    name: "package"
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checkout source code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt;
      # package application into BUILD directory
      - name: Create BUILD directory and copy necessary application files
        run: |
          mkdir BUILD
          cp -r static BUILD/static  # copy the static directory and contents
          cp -r templates BUILD/templates  # copy the templates directory and contents
          cp -r app.py BUILD/app.py
          cp -r requirements.txt BUILD/requirements.txt
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            ./BUILD
  deploy:
    runs-on: ubuntu-latest
    needs: package
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "olivia-pipeline"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D9FA55F5D5914C2AAD7824C4C26E1B9A }}




# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

#name: Build and deploy Python app to Azure Web App - olivia-pipeline

#on:
  #push:
    #branches:
      #- main
  #workflow_dispatch:

#jobs:
  #build:
    #runs-on: ubuntu-latest

    #steps:
     # - uses: actions/checkout@v2

      #- name: Set up Python version
       # uses: actions/setup-python@v1
        #with:
         # python-version: '3.11'

     # - name: Create and start virtual environment
      #  run: |
        #  python -m venv venv
         # source venv/bin/activate
      
     # - name: Install dependencies
       # run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)#
      
     # - name: Upload artifact for deployment jobs
       # uses: actions/upload-artifact@v2
       # with:
         # name: python-app
          #path: |
           # . 
            #!venv/

 # deploy:
   # runs-on: ubuntu-latest
    #needs: build
    #environment:
      #name: 'Production'
      #url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

   # steps:
    #  - name: Download artifact from build job
    # uses: actions/download-artifact@v2
       # with:
         # name: python-app
         # path: .
          
     # - name: 'Deploy to Azure Web App'
       # uses: azure/webapps-deploy@v2
       # id: deploy-to-webapp
       # with:
         # app-name: 'olivia-pipeline'
        #  slot-name: 'Production'
        #  publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D9FA55F5D5914C2AAD7824C4C26E1B9A }}
        
    
